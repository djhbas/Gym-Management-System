/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaproject;

import java.awt.Cursor;
import com.sun.glass.events.KeyEvent;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Celeste, Curt Russel
 */
public class modifyMembers extends javax.swing.JFrame {

    /**
     * Creates new form modifyMembers
     */
    public modifyMembers() {
        initComponents();
        fetch();
    }

    Connection con;
    Statement st;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        modifyTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        showAll = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        sub = new javax.swing.JComboBox<>();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        Back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(80, 88, 108));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gym Management System", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        modifyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Age", "Contact no.", "Subscription"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        modifyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifyTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(modifyTable);

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(220, 226, 240));
        jLabel9.setText("Click the record to modify");

        searchButton.setText("search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(220, 226, 240));
        jLabel10.setText("Enter ID");

        showAll.setForeground(new java.awt.Color(80, 88, 108));
        showAll.setText("Show all");
        showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modify", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 14), new java.awt.Color(80, 88, 108))); // NOI18N

        jLabel8.setForeground(new java.awt.Color(80, 88, 108));
        jLabel8.setText("ID");

        jLabel1.setForeground(new java.awt.Color(80, 88, 108));
        jLabel1.setText("First name");

        jLabel2.setForeground(new java.awt.Color(80, 88, 108));
        jLabel2.setText("Last Name");

        jLabel3.setForeground(new java.awt.Color(80, 88, 108));
        jLabel3.setText("Age");

        id.setForeground(new java.awt.Color(102, 102, 102));
        id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                idMouseEntered(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(80, 88, 108));
        jLabel5.setText("Contact no.");

        jLabel6.setForeground(new java.awt.Color(80, 88, 108));
        jLabel6.setText("+63");

        jLabel4.setForeground(new java.awt.Color(80, 88, 108));
        jLabel4.setText("Subscription");

        contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactKeyTyped(evt);
            }
        });

        sub.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "1 month", "3 months", "6 months", "12 months" }));

        update.setBackground(new java.awt.Color(0, 204, 51));
        update.setForeground(new java.awt.Color(80, 88, 108));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(204, 0, 0));
        delete.setForeground(new java.awt.Color(80, 88, 108));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        Back.setForeground(new java.awt.Color(80, 88, 108));
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(id)
                                    .addComponent(lname)
                                    .addComponent(fname)
                                    .addComponent(sub, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4))
                                        .addGap(221, 221, 221)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contact)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(update)
                        .addGap(23, 23, 23)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Back)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(Back)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(461, 461, 461)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(showAll)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton)))
                        .addGap(48, 48, 48)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchButton)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(showAll)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
// To display main menu
    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        Menu men = new Menu();
        men.show();
        dispose();
    }//GEN-LAST:event_BackActionPerformed
// To display all the records in table from database
    private void modifyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyTableMouseClicked
        int index = modifyTable.getSelectedRow();

        id.setText(modifyTable.getValueAt(index, 0).toString());
        fname.setText(modifyTable.getValueAt(index, 1).toString());
        lname.setText(modifyTable.getValueAt(index, 2).toString());
        age.setText(modifyTable.getValueAt(index, 3).toString());
        contact.setText(modifyTable.getValueAt(index, 4).toString());
        sub.setSelectedItem(modifyTable.getValueAt(index, 5));

    }//GEN-LAST:event_modifyTableMouseClicked
// To update a specific record to database
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/members", "usn", "123");

            String val1, val2, val3, val4, val5, val6, sql;
            String status = "NOT PAID";
            val1 = id.getText();
            val2 = fname.getText();
            val3 = lname.getText();
            val4 = age.getText();
            val5 = contact.getText();
            val6 = sub.getSelectedItem().toString();
            String amount;

            int limit = Integer.parseInt(val4);
            int digit = val5.length();

            if (limit < 18 || limit > 50) {
                JOptionPane.showMessageDialog(this, "Age must be 18 and above or 50 below!", "Error", JOptionPane.ERROR_MESSAGE);
                age.setText("");
            } else if (digit != 10) {
                JOptionPane.showMessageDialog(this, "Contact no. must be 10 digits!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (val6.equals("1 month")) {
                    amount = "3800.00";
                    st = con.createStatement();
                    sql = "UPDATE Members SET fname = '" + val2 + "', lname = '" + val3 + "', age = '" + val4 
                    + "', contact = '" + val5 + "', subscription = '" + val6 + "', amount = '" + amount + "', status = '" + status + "' WHERE id = " + val1;
                    st.executeUpdate(sql);
                } else if (val6.equals("3 months")) {
                    amount = "8400.00";
                    st = con.createStatement();
                    sql = "UPDATE Members SET fname = '" + val2 + "', lname = '" + val3 + "', age = '" + val4 
                    + "', contact = '" + val5 + "', subscription = '" + val6 + "', amount = '" + amount + "', status = '" + status + "' WHERE id = " + val1;
                    st.executeUpdate(sql);
                } else if (val6.equals("6 months")) {
                    amount = "16500.00";
                    st = con.createStatement();
                    sql = "UPDATE Members SET fname = '" + val2 + "', lname = '" + val3 + "', age = '" + 
                    val4 + "', contact = '" + val5 + "', subscription = '" + val6 + "', amount = '" + amount + "', status = '" + status + "' WHERE id = " + val1;
                    st.executeUpdate(sql);
                } else if (val6.equals("12 months")) {
                    amount = "28000.00";
                    st = con.createStatement();
                    sql = "UPDATE Members SET fname = '" + val2 + "', lname = '" + val3 + "', age = '" + val4 
                    + "', contact = '" + val5 + "', subscription = '" + val6 + "', amount = '" + amount + "', status = '" + status + "' WHERE id = " + val1;
                    st.executeUpdate(sql);
                }

                DefaultTableModel tbl = (DefaultTableModel) modifyTable.getModel();
                tbl.setRowCount(0);
                fetch();

                JOptionPane.showMessageDialog(this, "Data updated successfully!");
            }
            con.close();

        } catch (Exception e) {
            System.out.print(e.getMessage());
        }
    }//GEN-LAST:event_updateActionPerformed
// To disallow editing the text field and set cursor to default cursor when hover
    private void idMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idMouseClicked
        id.setEditable(false);
        id.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_idMouseClicked
// To input 10-digit number only
    private void contactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactKeyTyped
        char c = evt.getKeyChar();

        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACKSPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }

        int length = contact.getText().length();

        if (length < 10) {
            contact.setEditable(true);
        } else {
            if (c == KeyEvent.VK_BACKSPACE) {
                contact.setEditable(true);
            } else {
                contact.setEditable(false);
            }
        }
    }//GEN-LAST:event_contactKeyTyped
// To set cursor to default cursor when hover
    private void idMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idMouseEntered
        id.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_idMouseEntered
// To delete a specific record from database
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            String val1, sql;

            val1 = id.getText();

            int result = JOptionPane.showConfirmDialog(this, "Are you sure do you want to delete this record?", 
                         "Delete Record", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (result == JOptionPane.YES_OPTION) {
                con = DriverManager.getConnection("jdbc:derby://localhost:1527/members", "usn", "123");
                st = con.createStatement();

                sql = "DELETE FROM Members WHERE id = " + val1;
                st.executeUpdate(sql);

                DefaultTableModel tbl = (DefaultTableModel) modifyTable.getModel();
                tbl.setRowCount(0);
                fetch();

                JOptionPane.showMessageDialog(this, "Data deleted successfully!");

                id.setText("");
                fname.setText("");
                lname.setText("");
                age.setText("");
                contact.setText("");
                sub.setSelectedItem("");

                con.close();
            }
        } catch (Exception e) {
            System.out.print(e.getMessage());
        }
    }//GEN-LAST:event_deleteActionPerformed
// For searching a specific record from database
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try {
            String SEARCH = search.getText();

            con = DriverManager.getConnection("jdbc:derby://localhost:1527/members", "usn", "123");
            st = con.createStatement();

            String view = "SELECT * FROM Members WHERE id = " + SEARCH;
            rs = st.executeQuery(view);

            if (rs.next() == false) {
                JOptionPane.showMessageDialog(this, "Data not found!");
            } else {
                String ID = rs.getString("id");
                String FNAME = rs.getString("fname");
                String LNAME = rs.getString("lname");
                String AGE = rs.getString("age");
                String CONTACT = rs.getString("contact");
                String SUB = rs.getString("subscription");

                String data[] = {ID, FNAME, LNAME, AGE, CONTACT, SUB};
                DefaultTableModel tbl = (DefaultTableModel) modifyTable.getModel();
                tbl.setRowCount(0);
                tbl.addRow(data);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_searchButtonActionPerformed
// To refresh and display all records from database to the table after searching a specific record 
    private void showAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllActionPerformed
        DefaultTableModel tbl = (DefaultTableModel) modifyTable.getModel();
        tbl.setRowCount(0);
        fetch();
    }//GEN-LAST:event_showAllActionPerformed
    // To retrieve all the records from database and display it in table
    public void fetch() {
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/members", "usn", "123");
            st = con.createStatement();

            String view = "SELECT * FROM Members";
            rs = st.executeQuery(view);

            while (rs.next()) {
                String ID = rs.getString("id");
                String FNAME = rs.getString("fname");
                String LNAME = rs.getString("lname");
                String AGE = rs.getString("age");
                String CONTACT = rs.getString("contact");
                String SUB = rs.getString("subscription");

                String data[] = {ID, FNAME, LNAME, AGE, CONTACT, SUB};
                DefaultTableModel tbl = (DefaultTableModel) modifyTable.getModel();
                tbl.addRow(data);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(modifyMembers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(modifyMembers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(modifyMembers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(modifyMembers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new modifyMembers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTextField age;
    private javax.swing.JTextField contact;
    private javax.swing.JButton delete;
    private javax.swing.JTextField fname;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lname;
    public javax.swing.JTable modifyTable;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton showAll;
    private javax.swing.JComboBox<String> sub;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
